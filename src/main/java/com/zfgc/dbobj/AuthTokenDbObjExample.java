package com.zfgc.dbobj;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AuthTokenDbObjExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public AuthTokenDbObjExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAuthTokenIdIsNull() {
            addCriterion("AUTH_TOKEN_ID is null");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdIsNotNull() {
            addCriterion("AUTH_TOKEN_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdEqualTo(Integer value) {
            addCriterion("AUTH_TOKEN_ID =", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdNotEqualTo(Integer value) {
            addCriterion("AUTH_TOKEN_ID <>", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdGreaterThan(Integer value) {
            addCriterion("AUTH_TOKEN_ID >", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("AUTH_TOKEN_ID >=", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdLessThan(Integer value) {
            addCriterion("AUTH_TOKEN_ID <", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdLessThanOrEqualTo(Integer value) {
            addCriterion("AUTH_TOKEN_ID <=", value, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdIn(List<Integer> values) {
            addCriterion("AUTH_TOKEN_ID in", values, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdNotIn(List<Integer> values) {
            addCriterion("AUTH_TOKEN_ID not in", values, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdBetween(Integer value1, Integer value2) {
            addCriterion("AUTH_TOKEN_ID between", value1, value2, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andAuthTokenIdNotBetween(Integer value1, Integer value2) {
            addCriterion("AUTH_TOKEN_ID not between", value1, value2, "authTokenId");
            return (Criteria) this;
        }

        public Criteria andUsersIdIsNull() {
            addCriterion("USERS_ID is null");
            return (Criteria) this;
        }

        public Criteria andUsersIdIsNotNull() {
            addCriterion("USERS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUsersIdEqualTo(Integer value) {
            addCriterion("USERS_ID =", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdNotEqualTo(Integer value) {
            addCriterion("USERS_ID <>", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdGreaterThan(Integer value) {
            addCriterion("USERS_ID >", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USERS_ID >=", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdLessThan(Integer value) {
            addCriterion("USERS_ID <", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdLessThanOrEqualTo(Integer value) {
            addCriterion("USERS_ID <=", value, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdIn(List<Integer> values) {
            addCriterion("USERS_ID in", values, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdNotIn(List<Integer> values) {
            addCriterion("USERS_ID not in", values, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdBetween(Integer value1, Integer value2) {
            addCriterion("USERS_ID between", value1, value2, "usersId");
            return (Criteria) this;
        }

        public Criteria andUsersIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USERS_ID not between", value1, value2, "usersId");
            return (Criteria) this;
        }

        public Criteria andTokenIsNull() {
            addCriterion("TOKEN is null");
            return (Criteria) this;
        }

        public Criteria andTokenIsNotNull() {
            addCriterion("TOKEN is not null");
            return (Criteria) this;
        }

        public Criteria andTokenEqualTo(String value) {
            addCriterion("TOKEN =", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotEqualTo(String value) {
            addCriterion("TOKEN <>", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThan(String value) {
            addCriterion("TOKEN >", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN >=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThan(String value) {
            addCriterion("TOKEN <", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThanOrEqualTo(String value) {
            addCriterion("TOKEN <=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLike(String value) {
            addCriterion("TOKEN like", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotLike(String value) {
            addCriterion("TOKEN not like", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenIn(List<String> values) {
            addCriterion("TOKEN in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotIn(List<String> values) {
            addCriterion("TOKEN not in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenBetween(String value1, String value2) {
            addCriterion("TOKEN between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotBetween(String value1, String value2) {
            addCriterion("TOKEN not between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andTtlIsNull() {
            addCriterion("TTL is null");
            return (Criteria) this;
        }

        public Criteria andTtlIsNotNull() {
            addCriterion("TTL is not null");
            return (Criteria) this;
        }

        public Criteria andTtlEqualTo(Date value) {
            addCriterion("TTL =", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlNotEqualTo(Date value) {
            addCriterion("TTL <>", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlGreaterThan(Date value) {
            addCriterion("TTL >", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlGreaterThanOrEqualTo(Date value) {
            addCriterion("TTL >=", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlLessThan(Date value) {
            addCriterion("TTL <", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlLessThanOrEqualTo(Date value) {
            addCriterion("TTL <=", value, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlIn(List<Date> values) {
            addCriterion("TTL in", values, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlNotIn(List<Date> values) {
            addCriterion("TTL not in", values, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlBetween(Date value1, Date value2) {
            addCriterion("TTL between", value1, value2, "ttl");
            return (Criteria) this;
        }

        public Criteria andTtlNotBetween(Date value1, Date value2) {
            addCriterion("TTL not between", value1, value2, "ttl");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIsNull() {
            addCriterion("CREATE_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIsNotNull() {
            addCriterion("CREATE_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampEqualTo(Date value) {
            addCriterion("CREATE_TIMESTAMP =", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotEqualTo(Date value) {
            addCriterion("CREATE_TIMESTAMP <>", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampGreaterThan(Date value) {
            addCriterion("CREATE_TIMESTAMP >", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIMESTAMP >=", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampLessThan(Date value) {
            addCriterion("CREATE_TIMESTAMP <", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIMESTAMP <=", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIn(List<Date> values) {
            addCriterion("CREATE_TIMESTAMP in", values, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotIn(List<Date> values) {
            addCriterion("CREATE_TIMESTAMP not in", values, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIMESTAMP between", value1, value2, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIMESTAMP not between", value1, value2, "createTimestamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 14 22:35:05 EST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AUTH_TOKEN
     *
     * @mbggenerated Mon Nov 14 22:35:05 EST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}