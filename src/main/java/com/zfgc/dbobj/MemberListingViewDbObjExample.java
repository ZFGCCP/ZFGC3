package com.zfgc.dbobj;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MemberListingViewDbObjExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public MemberListingViewDbObjExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUsersIdIsNull() {
			addCriterion("USERS_ID is null");
			return (Criteria) this;
		}

		public Criteria andUsersIdIsNotNull() {
			addCriterion("USERS_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUsersIdEqualTo(Integer value) {
			addCriterion("USERS_ID =", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotEqualTo(Integer value) {
			addCriterion("USERS_ID <>", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdGreaterThan(Integer value) {
			addCriterion("USERS_ID >", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USERS_ID >=", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdLessThan(Integer value) {
			addCriterion("USERS_ID <", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdLessThanOrEqualTo(Integer value) {
			addCriterion("USERS_ID <=", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdIn(List<Integer> values) {
			addCriterion("USERS_ID in", values, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotIn(List<Integer> values) {
			addCriterion("USERS_ID not in", values, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdBetween(Integer value1, Integer value2) {
			addCriterion("USERS_ID between", value1, value2, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USERS_ID not between", value1, value2, "usersId");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNull() {
			addCriterion("DISPLAY_NAME is null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNotNull() {
			addCriterion("DISPLAY_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameEqualTo(String value) {
			addCriterion("DISPLAY_NAME =", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotEqualTo(String value) {
			addCriterion("DISPLAY_NAME <>", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThan(String value) {
			addCriterion("DISPLAY_NAME >", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThanOrEqualTo(String value) {
			addCriterion("DISPLAY_NAME >=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThan(String value) {
			addCriterion("DISPLAY_NAME <", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThanOrEqualTo(String value) {
			addCriterion("DISPLAY_NAME <=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLike(String value) {
			addCriterion("DISPLAY_NAME like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotLike(String value) {
			addCriterion("DISPLAY_NAME not like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIn(List<String> values) {
			addCriterion("DISPLAY_NAME in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotIn(List<String> values) {
			addCriterion("DISPLAY_NAME not in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameBetween(String value1, String value2) {
			addCriterion("DISPLAY_NAME between", value1, value2, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotBetween(String value1, String value2) {
			addCriterion("DISPLAY_NAME not between", value1, value2, "displayName");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIsNull() {
			addCriterion("EMAIL_ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIsNotNull() {
			addCriterion("EMAIL_ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressEqualTo(String value) {
			addCriterion("EMAIL_ADDRESS =", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotEqualTo(String value) {
			addCriterion("EMAIL_ADDRESS <>", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressGreaterThan(String value) {
			addCriterion("EMAIL_ADDRESS >", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressGreaterThanOrEqualTo(String value) {
			addCriterion("EMAIL_ADDRESS >=", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLessThan(String value) {
			addCriterion("EMAIL_ADDRESS <", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLessThanOrEqualTo(String value) {
			addCriterion("EMAIL_ADDRESS <=", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLike(String value) {
			addCriterion("EMAIL_ADDRESS like", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotLike(String value) {
			addCriterion("EMAIL_ADDRESS not like", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIn(List<String> values) {
			addCriterion("EMAIL_ADDRESS in", values, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotIn(List<String> values) {
			addCriterion("EMAIL_ADDRESS not in", values, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressBetween(String value1, String value2) {
			addCriterion("EMAIL_ADDRESS between", value1, value2, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotBetween(String value1, String value2) {
			addCriterion("EMAIL_ADDRESS not between", value1, value2, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andLastLoginIsNull() {
			addCriterion("LAST_LOGIN is null");
			return (Criteria) this;
		}

		public Criteria andLastLoginIsNotNull() {
			addCriterion("LAST_LOGIN is not null");
			return (Criteria) this;
		}

		public Criteria andLastLoginEqualTo(Date value) {
			addCriterion("LAST_LOGIN =", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginNotEqualTo(Date value) {
			addCriterion("LAST_LOGIN <>", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginGreaterThan(Date value) {
			addCriterion("LAST_LOGIN >", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginGreaterThanOrEqualTo(Date value) {
			addCriterion("LAST_LOGIN >=", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginLessThan(Date value) {
			addCriterion("LAST_LOGIN <", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginLessThanOrEqualTo(Date value) {
			addCriterion("LAST_LOGIN <=", value, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginIn(List<Date> values) {
			addCriterion("LAST_LOGIN in", values, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginNotIn(List<Date> values) {
			addCriterion("LAST_LOGIN not in", values, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginBetween(Date value1, Date value2) {
			addCriterion("LAST_LOGIN between", value1, value2, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andLastLoginNotBetween(Date value1, Date value2) {
			addCriterion("LAST_LOGIN not between", value1, value2, "lastLogin");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredIsNull() {
			addCriterion("DATE_REGISTERED is null");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredIsNotNull() {
			addCriterion("DATE_REGISTERED is not null");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredEqualTo(Date value) {
			addCriterion("DATE_REGISTERED =", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredNotEqualTo(Date value) {
			addCriterion("DATE_REGISTERED <>", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredGreaterThan(Date value) {
			addCriterion("DATE_REGISTERED >", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredGreaterThanOrEqualTo(Date value) {
			addCriterion("DATE_REGISTERED >=", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredLessThan(Date value) {
			addCriterion("DATE_REGISTERED <", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredLessThanOrEqualTo(Date value) {
			addCriterion("DATE_REGISTERED <=", value, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredIn(List<Date> values) {
			addCriterion("DATE_REGISTERED in", values, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredNotIn(List<Date> values) {
			addCriterion("DATE_REGISTERED not in", values, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredBetween(Date value1, Date value2) {
			addCriterion("DATE_REGISTERED between", value1, value2, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andDateRegisteredNotBetween(Date value1, Date value2) {
			addCriterion("DATE_REGISTERED not between", value1, value2, "dateRegistered");
			return (Criteria) this;
		}

		public Criteria andGroupNameIsNull() {
			addCriterion("GROUP_NAME is null");
			return (Criteria) this;
		}

		public Criteria andGroupNameIsNotNull() {
			addCriterion("GROUP_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andGroupNameEqualTo(String value) {
			addCriterion("GROUP_NAME =", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameNotEqualTo(String value) {
			addCriterion("GROUP_NAME <>", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameGreaterThan(String value) {
			addCriterion("GROUP_NAME >", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameGreaterThanOrEqualTo(String value) {
			addCriterion("GROUP_NAME >=", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameLessThan(String value) {
			addCriterion("GROUP_NAME <", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameLessThanOrEqualTo(String value) {
			addCriterion("GROUP_NAME <=", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameLike(String value) {
			addCriterion("GROUP_NAME like", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameNotLike(String value) {
			addCriterion("GROUP_NAME not like", value, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameIn(List<String> values) {
			addCriterion("GROUP_NAME in", values, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameNotIn(List<String> values) {
			addCriterion("GROUP_NAME not in", values, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameBetween(String value1, String value2) {
			addCriterion("GROUP_NAME between", value1, value2, "groupName");
			return (Criteria) this;
		}

		public Criteria andGroupNameNotBetween(String value1, String value2) {
			addCriterion("GROUP_NAME not between", value1, value2, "groupName");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdIsNull() {
			addCriterion("LKUP_TIMEZONES_ID is null");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdIsNotNull() {
			addCriterion("LKUP_TIMEZONES_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdEqualTo(Short value) {
			addCriterion("LKUP_TIMEZONES_ID =", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdNotEqualTo(Short value) {
			addCriterion("LKUP_TIMEZONES_ID <>", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdGreaterThan(Short value) {
			addCriterion("LKUP_TIMEZONES_ID >", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdGreaterThanOrEqualTo(Short value) {
			addCriterion("LKUP_TIMEZONES_ID >=", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdLessThan(Short value) {
			addCriterion("LKUP_TIMEZONES_ID <", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdLessThanOrEqualTo(Short value) {
			addCriterion("LKUP_TIMEZONES_ID <=", value, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdIn(List<Short> values) {
			addCriterion("LKUP_TIMEZONES_ID in", values, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdNotIn(List<Short> values) {
			addCriterion("LKUP_TIMEZONES_ID not in", values, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdBetween(Short value1, Short value2) {
			addCriterion("LKUP_TIMEZONES_ID between", value1, value2, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andLkupTimezonesIdNotBetween(Short value1, Short value2) {
			addCriterion("LKUP_TIMEZONES_ID not between", value1, value2, "lkupTimezonesId");
			return (Criteria) this;
		}

		public Criteria andTimeZoneIsNull() {
			addCriterion("TIME_ZONE is null");
			return (Criteria) this;
		}

		public Criteria andTimeZoneIsNotNull() {
			addCriterion("TIME_ZONE is not null");
			return (Criteria) this;
		}

		public Criteria andTimeZoneEqualTo(String value) {
			addCriterion("TIME_ZONE =", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneNotEqualTo(String value) {
			addCriterion("TIME_ZONE <>", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneGreaterThan(String value) {
			addCriterion("TIME_ZONE >", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneGreaterThanOrEqualTo(String value) {
			addCriterion("TIME_ZONE >=", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneLessThan(String value) {
			addCriterion("TIME_ZONE <", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneLessThanOrEqualTo(String value) {
			addCriterion("TIME_ZONE <=", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneLike(String value) {
			addCriterion("TIME_ZONE like", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneNotLike(String value) {
			addCriterion("TIME_ZONE not like", value, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneIn(List<String> values) {
			addCriterion("TIME_ZONE in", values, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneNotIn(List<String> values) {
			addCriterion("TIME_ZONE not in", values, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneBetween(String value1, String value2) {
			addCriterion("TIME_ZONE between", value1, value2, "timeZone");
			return (Criteria) this;
		}

		public Criteria andTimeZoneNotBetween(String value1, String value2) {
			addCriterion("TIME_ZONE not between", value1, value2, "timeZone");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIsNull() {
			addCriterion("ACTIVE_FLAG is null");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIsNotNull() {
			addCriterion("ACTIVE_FLAG is not null");
			return (Criteria) this;
		}

		public Criteria andActiveFlagEqualTo(Boolean value) {
			addCriterion("ACTIVE_FLAG =", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotEqualTo(Boolean value) {
			addCriterion("ACTIVE_FLAG <>", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagGreaterThan(Boolean value) {
			addCriterion("ACTIVE_FLAG >", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagGreaterThanOrEqualTo(Boolean value) {
			addCriterion("ACTIVE_FLAG >=", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagLessThan(Boolean value) {
			addCriterion("ACTIVE_FLAG <", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagLessThanOrEqualTo(Boolean value) {
			addCriterion("ACTIVE_FLAG <=", value, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagIn(List<Boolean> values) {
			addCriterion("ACTIVE_FLAG in", values, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotIn(List<Boolean> values) {
			addCriterion("ACTIVE_FLAG not in", values, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagBetween(Boolean value1, Boolean value2) {
			addCriterion("ACTIVE_FLAG between", value1, value2, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andActiveFlagNotBetween(Boolean value1, Boolean value2) {
			addCriterion("ACTIVE_FLAG not between", value1, value2, "activeFlag");
			return (Criteria) this;
		}

		public Criteria andIpAddressIsNull() {
			addCriterion("IP_ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andIpAddressIsNotNull() {
			addCriterion("IP_ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andIpAddressEqualTo(String value) {
			addCriterion("IP_ADDRESS =", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressNotEqualTo(String value) {
			addCriterion("IP_ADDRESS <>", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressGreaterThan(String value) {
			addCriterion("IP_ADDRESS >", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressGreaterThanOrEqualTo(String value) {
			addCriterion("IP_ADDRESS >=", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressLessThan(String value) {
			addCriterion("IP_ADDRESS <", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressLessThanOrEqualTo(String value) {
			addCriterion("IP_ADDRESS <=", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressLike(String value) {
			addCriterion("IP_ADDRESS like", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressNotLike(String value) {
			addCriterion("IP_ADDRESS not like", value, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressIn(List<String> values) {
			addCriterion("IP_ADDRESS in", values, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressNotIn(List<String> values) {
			addCriterion("IP_ADDRESS not in", values, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressBetween(String value1, String value2) {
			addCriterion("IP_ADDRESS between", value1, value2, "ipAddress");
			return (Criteria) this;
		}

		public Criteria andIpAddressNotBetween(String value1, String value2) {
			addCriterion("IP_ADDRESS not between", value1, value2, "ipAddress");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table MEMBER_LISTING_VIEW
	 * @mbg.generated  Sat Nov 21 21:32:39 EST 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_LISTING_VIEW
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 16 12:03:50 EDT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    protected Integer limitStart;
    protected Integer limitRange;
    
    public String getLimitClause() {
    	if(limitStart != null && limitRange == null) {
    		return "LIMIT " + limitStart;
    	}
    	else if(limitStart != null && limitRange != null) {
    		return "LIMIT " + limitStart + "," + limitRange;
    	}
    	
    	return null;
    	
    }

	public Integer getLimitStart() {
		return limitStart;
	}

	public void setLimitStart(Integer limitStart) {
		this.limitStart = limitStart;
	}

	public Integer getLimitRange() {
		return limitRange;
	}

	public void setLimitRange(Integer limitRange) {
		this.limitRange = limitRange;
	}
}