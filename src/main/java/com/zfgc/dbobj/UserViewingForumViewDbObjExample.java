package com.zfgc.dbobj;

import java.util.ArrayList;
import java.util.List;

public class UserViewingForumViewDbObjExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public UserViewingForumViewDbObjExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUsersIdIsNull() {
			addCriterion("USERS_ID is null");
			return (Criteria) this;
		}

		public Criteria andUsersIdIsNotNull() {
			addCriterion("USERS_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUsersIdEqualTo(Integer value) {
			addCriterion("USERS_ID =", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotEqualTo(Integer value) {
			addCriterion("USERS_ID <>", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdGreaterThan(Integer value) {
			addCriterion("USERS_ID >", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("USERS_ID >=", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdLessThan(Integer value) {
			addCriterion("USERS_ID <", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdLessThanOrEqualTo(Integer value) {
			addCriterion("USERS_ID <=", value, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdIn(List<Integer> values) {
			addCriterion("USERS_ID in", values, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotIn(List<Integer> values) {
			addCriterion("USERS_ID not in", values, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdBetween(Integer value1, Integer value2) {
			addCriterion("USERS_ID between", value1, value2, "usersId");
			return (Criteria) this;
		}

		public Criteria andUsersIdNotBetween(Integer value1, Integer value2) {
			addCriterion("USERS_ID not between", value1, value2, "usersId");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNull() {
			addCriterion("DISPLAY_NAME is null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNotNull() {
			addCriterion("DISPLAY_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameEqualTo(String value) {
			addCriterion("DISPLAY_NAME =", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotEqualTo(String value) {
			addCriterion("DISPLAY_NAME <>", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThan(String value) {
			addCriterion("DISPLAY_NAME >", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThanOrEqualTo(String value) {
			addCriterion("DISPLAY_NAME >=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThan(String value) {
			addCriterion("DISPLAY_NAME <", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThanOrEqualTo(String value) {
			addCriterion("DISPLAY_NAME <=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLike(String value) {
			addCriterion("DISPLAY_NAME like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotLike(String value) {
			addCriterion("DISPLAY_NAME not like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIn(List<String> values) {
			addCriterion("DISPLAY_NAME in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotIn(List<String> values) {
			addCriterion("DISPLAY_NAME not in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameBetween(String value1, String value2) {
			addCriterion("DISPLAY_NAME between", value1, value2, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotBetween(String value1, String value2) {
			addCriterion("DISPLAY_NAME not between", value1, value2, "displayName");
			return (Criteria) this;
		}

		public Criteria andForumIdIsNull() {
			addCriterion("FORUM_ID is null");
			return (Criteria) this;
		}

		public Criteria andForumIdIsNotNull() {
			addCriterion("FORUM_ID is not null");
			return (Criteria) this;
		}

		public Criteria andForumIdEqualTo(Integer value) {
			addCriterion("FORUM_ID =", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdNotEqualTo(Integer value) {
			addCriterion("FORUM_ID <>", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdGreaterThan(Integer value) {
			addCriterion("FORUM_ID >", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("FORUM_ID >=", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdLessThan(Integer value) {
			addCriterion("FORUM_ID <", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdLessThanOrEqualTo(Integer value) {
			addCriterion("FORUM_ID <=", value, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdIn(List<Integer> values) {
			addCriterion("FORUM_ID in", values, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdNotIn(List<Integer> values) {
			addCriterion("FORUM_ID not in", values, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdBetween(Integer value1, Integer value2) {
			addCriterion("FORUM_ID between", value1, value2, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumIdNotBetween(Integer value1, Integer value2) {
			addCriterion("FORUM_ID not between", value1, value2, "forumId");
			return (Criteria) this;
		}

		public Criteria andForumNameIsNull() {
			addCriterion("FORUM_NAME is null");
			return (Criteria) this;
		}

		public Criteria andForumNameIsNotNull() {
			addCriterion("FORUM_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andForumNameEqualTo(String value) {
			addCriterion("FORUM_NAME =", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameNotEqualTo(String value) {
			addCriterion("FORUM_NAME <>", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameGreaterThan(String value) {
			addCriterion("FORUM_NAME >", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameGreaterThanOrEqualTo(String value) {
			addCriterion("FORUM_NAME >=", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameLessThan(String value) {
			addCriterion("FORUM_NAME <", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameLessThanOrEqualTo(String value) {
			addCriterion("FORUM_NAME <=", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameLike(String value) {
			addCriterion("FORUM_NAME like", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameNotLike(String value) {
			addCriterion("FORUM_NAME not like", value, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameIn(List<String> values) {
			addCriterion("FORUM_NAME in", values, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameNotIn(List<String> values) {
			addCriterion("FORUM_NAME not in", values, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameBetween(String value1, String value2) {
			addCriterion("FORUM_NAME between", value1, value2, "forumName");
			return (Criteria) this;
		}

		public Criteria andForumNameNotBetween(String value1, String value2) {
			addCriterion("FORUM_NAME not between", value1, value2, "forumName");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USER_VIEWING_FORUM_VIEW
	 * @mbg.generated  Sat Jan 25 10:43:32 EST 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USER_VIEWING_FORUM_VIEW
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 24 23:15:21 EST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}