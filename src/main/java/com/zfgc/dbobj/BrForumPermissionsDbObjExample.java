package com.zfgc.dbobj;

import java.util.ArrayList;
import java.util.List;

public class BrForumPermissionsDbObjExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public BrForumPermissionsDbObjExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBrThreadPermissionsIdIsNull() {
            addCriterion("BR_THREAD_PERMISSIONS_ID is null");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdIsNotNull() {
            addCriterion("BR_THREAD_PERMISSIONS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdEqualTo(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID =", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdNotEqualTo(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID <>", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdGreaterThan(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID >", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID >=", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdLessThan(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID <", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdLessThanOrEqualTo(Integer value) {
            addCriterion("BR_THREAD_PERMISSIONS_ID <=", value, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdIn(List<Integer> values) {
            addCriterion("BR_THREAD_PERMISSIONS_ID in", values, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdNotIn(List<Integer> values) {
            addCriterion("BR_THREAD_PERMISSIONS_ID not in", values, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdBetween(Integer value1, Integer value2) {
            addCriterion("BR_THREAD_PERMISSIONS_ID between", value1, value2, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andBrThreadPermissionsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("BR_THREAD_PERMISSIONS_ID not between", value1, value2, "brThreadPermissionsId");
            return (Criteria) this;
        }

        public Criteria andForumIdIsNull() {
            addCriterion("FORUM_ID is null");
            return (Criteria) this;
        }

        public Criteria andForumIdIsNotNull() {
            addCriterion("FORUM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andForumIdEqualTo(Short value) {
            addCriterion("FORUM_ID =", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdNotEqualTo(Short value) {
            addCriterion("FORUM_ID <>", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdGreaterThan(Short value) {
            addCriterion("FORUM_ID >", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdGreaterThanOrEqualTo(Short value) {
            addCriterion("FORUM_ID >=", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdLessThan(Short value) {
            addCriterion("FORUM_ID <", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdLessThanOrEqualTo(Short value) {
            addCriterion("FORUM_ID <=", value, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdIn(List<Short> values) {
            addCriterion("FORUM_ID in", values, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdNotIn(List<Short> values) {
            addCriterion("FORUM_ID not in", values, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdBetween(Short value1, Short value2) {
            addCriterion("FORUM_ID between", value1, value2, "forumId");
            return (Criteria) this;
        }

        public Criteria andForumIdNotBetween(Short value1, Short value2) {
            addCriterion("FORUM_ID not between", value1, value2, "forumId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdIsNull() {
            addCriterion("PERMISSIONS_ID is null");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdIsNotNull() {
            addCriterion("PERMISSIONS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdEqualTo(Integer value) {
            addCriterion("PERMISSIONS_ID =", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdNotEqualTo(Integer value) {
            addCriterion("PERMISSIONS_ID <>", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdGreaterThan(Integer value) {
            addCriterion("PERMISSIONS_ID >", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PERMISSIONS_ID >=", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdLessThan(Integer value) {
            addCriterion("PERMISSIONS_ID <", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdLessThanOrEqualTo(Integer value) {
            addCriterion("PERMISSIONS_ID <=", value, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdIn(List<Integer> values) {
            addCriterion("PERMISSIONS_ID in", values, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdNotIn(List<Integer> values) {
            addCriterion("PERMISSIONS_ID not in", values, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdBetween(Integer value1, Integer value2) {
            addCriterion("PERMISSIONS_ID between", value1, value2, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andPermissionsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PERMISSIONS_ID not between", value1, value2, "permissionsId");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagIsNull() {
            addCriterion("READ_ONLY_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagIsNotNull() {
            addCriterion("READ_ONLY_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagEqualTo(Boolean value) {
            addCriterion("READ_ONLY_FLAG =", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagNotEqualTo(Boolean value) {
            addCriterion("READ_ONLY_FLAG <>", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagGreaterThan(Boolean value) {
            addCriterion("READ_ONLY_FLAG >", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("READ_ONLY_FLAG >=", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagLessThan(Boolean value) {
            addCriterion("READ_ONLY_FLAG <", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("READ_ONLY_FLAG <=", value, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagIn(List<Boolean> values) {
            addCriterion("READ_ONLY_FLAG in", values, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagNotIn(List<Boolean> values) {
            addCriterion("READ_ONLY_FLAG not in", values, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("READ_ONLY_FLAG between", value1, value2, "readOnlyFlag");
            return (Criteria) this;
        }

        public Criteria andReadOnlyFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("READ_ONLY_FLAG not between", value1, value2, "readOnlyFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 27 00:01:31 EDT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BR_FORUM_PERMISSIONS
     *
     * @mbg.generated Mon Apr 27 00:01:31 EDT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}