package com.zfgc.dbobj;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UpcomingCalendarViewDbObjExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public UpcomingCalendarViewDbObjExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEventIdIsNull() {
            addCriterion("EVENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("EVENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(Integer value) {
            addCriterion("EVENT_ID =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(Integer value) {
            addCriterion("EVENT_ID <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(Integer value) {
            addCriterion("EVENT_ID >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EVENT_ID >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(Integer value) {
            addCriterion("EVENT_ID <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(Integer value) {
            addCriterion("EVENT_ID <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<Integer> values) {
            addCriterion("EVENT_ID in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<Integer> values) {
            addCriterion("EVENT_ID not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(Integer value1, Integer value2) {
            addCriterion("EVENT_ID between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EVENT_ID not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventNameIsNull() {
            addCriterion("EVENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andEventNameIsNotNull() {
            addCriterion("EVENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andEventNameEqualTo(String value) {
            addCriterion("EVENT_NAME =", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotEqualTo(String value) {
            addCriterion("EVENT_NAME <>", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameGreaterThan(String value) {
            addCriterion("EVENT_NAME >", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameGreaterThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME >=", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLessThan(String value) {
            addCriterion("EVENT_NAME <", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLessThanOrEqualTo(String value) {
            addCriterion("EVENT_NAME <=", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLike(String value) {
            addCriterion("EVENT_NAME like", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotLike(String value) {
            addCriterion("EVENT_NAME not like", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameIn(List<String> values) {
            addCriterion("EVENT_NAME in", values, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotIn(List<String> values) {
            addCriterion("EVENT_NAME not in", values, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameBetween(String value1, String value2) {
            addCriterion("EVENT_NAME between", value1, value2, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotBetween(String value1, String value2) {
            addCriterion("EVENT_NAME not between", value1, value2, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventDtIsNull() {
            addCriterion("EVENT_DT is null");
            return (Criteria) this;
        }

        public Criteria andEventDtIsNotNull() {
            addCriterion("EVENT_DT is not null");
            return (Criteria) this;
        }

        public Criteria andEventDtEqualTo(Date value) {
            addCriterionForJDBCDate("EVENT_DT =", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("EVENT_DT <>", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtGreaterThan(Date value) {
            addCriterionForJDBCDate("EVENT_DT >", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EVENT_DT >=", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtLessThan(Date value) {
            addCriterionForJDBCDate("EVENT_DT <", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EVENT_DT <=", value, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtIn(List<Date> values) {
            addCriterionForJDBCDate("EVENT_DT in", values, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("EVENT_DT not in", values, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EVENT_DT between", value1, value2, "eventDt");
            return (Criteria) this;
        }

        public Criteria andEventDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EVENT_DT not between", value1, value2, "eventDt");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagIsNull() {
            addCriterion("BIRTHDATE_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagIsNotNull() {
            addCriterion("BIRTHDATE_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagEqualTo(Boolean value) {
            addCriterion("BIRTHDATE_FLAG =", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagNotEqualTo(Boolean value) {
            addCriterion("BIRTHDATE_FLAG <>", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagGreaterThan(Boolean value) {
            addCriterion("BIRTHDATE_FLAG >", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("BIRTHDATE_FLAG >=", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagLessThan(Boolean value) {
            addCriterion("BIRTHDATE_FLAG <", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("BIRTHDATE_FLAG <=", value, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagIn(List<Boolean> values) {
            addCriterion("BIRTHDATE_FLAG in", values, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagNotIn(List<Boolean> values) {
            addCriterion("BIRTHDATE_FLAG not in", values, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("BIRTHDATE_FLAG between", value1, value2, "birthdateFlag");
            return (Criteria) this;
        }

        public Criteria andBirthdateFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("BIRTHDATE_FLAG not between", value1, value2, "birthdateFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated do_not_delete_during_merge Mon May 06 23:11:57 EDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table UPCOMING_CALENDAR_VIEW
     *
     * @mbggenerated Mon May 06 23:11:57 EDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}